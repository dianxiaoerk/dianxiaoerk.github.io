<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Waiter</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dianxiaoerk.github.io/"/>
  <updated>2019-06-04T12:37:11.995Z</updated>
  <id>https://dianxiaoerk.github.io/</id>
  
  <author>
    <name>Wine</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>c</title>
    <link href="https://dianxiaoerk.github.io/c/"/>
    <id>https://dianxiaoerk.github.io/c/</id>
    <published>2019-06-03T13:58:26.000Z</published>
    <updated>2019-06-04T12:37:11.995Z</updated>
    
    <content type="html"><![CDATA[<p>hahahaha<br><audio src="https://music.163.com/song/media/outer/url? id=2918954.mp3" id="audio0"></audio><br><input type="button" onclick="paly_audio0();" value="使用JS播放"></p><script>    function paly_audio0() {        //找到音频        var audio0 = document.getElementById("audio0");        if (audio0 != null) {            audio0.play();        }    }</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hahahaha&lt;br&gt;&lt;audio src=&quot;https://music.163.com/song/media/outer/url? id=2918954.mp3&quot; id=&quot;audio0&quot;&gt;&lt;/audio&gt;&lt;br&gt;&lt;input type=&quot;button&quot; onclick=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>b</title>
    <link href="https://dianxiaoerk.github.io/b/"/>
    <id>https://dianxiaoerk.github.io/b/</id>
    <published>2019-06-02T06:59:51.000Z</published>
    <updated>2019-06-04T15:38:51.472Z</updated>
    
    <content type="html"><![CDATA[<p>ssssss<br>ssssssssssssssssssssssssssssss</p><p><audio src="http://music.163.com/song/media/outer/url?id=2918954.mp3" id="audio"></audio></p><main id="music">    <!-- 开始/暂停按钮 -->    <div class="playWay play">    </div>    <!-- 播放控制台 -->    <div class="playControl">        <!-- 开始时间 -->        <span class="startTime">00:00</span>        <!-- 播放进度 -->        <div class="music-control">                <!-- 控制条背景 -->            <div class="music-control-background"></div>                <!-- 进行中的控制条 -->            <div class="music-control-playing">                    <!-- 圆点 -->                 <div class="control-rediu"></div>            </div>        </div>        <!-- 结束时间 -->        <span class="endTime">00:00</span>    </div></main><script src="http://cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js"></script><script>    //1、声明需要的变量  var music = document.getElementById('audio'),//获取audio音频标签    playTime = 0,//用来记录当前播放的时长    musicTimer,//声明计时器用来记录正在播放的时间    totalTime;//用来记录总时长    //2、添加点击事件 进行播放或暂停音乐    $('.playWay').click(function(){        if( $(this).hasClass('play')){            player()        }else{            stoped()         }    })    //3、播放的时候首先判断音乐资源是否加载完成    function playMusic(){        var playPromise = music.play();         //判断资源加载完了播放防止连接报错         if (playPromise) {             playPromise.then(function(){             // 音频加载成功             // 音频的播放需要耗时                setTimeout(function(){                 // 后续操作                    console.log("done.");                 }, audio.duration * 1000); // audio.duration 为音频的时长单位为秒            }).catch(function(e){             // 音频加载失败            });            }            musicTimer = setInterval(updateTime, 200);        }    //4、获取音乐时长     music.ondurationchange = function () {        //把获取的的音乐的总时间添加到结束时间中去        totalTime = parseInt(this.duration);         // 添加初始时间        $('.startTime').text(count(playTime));         //添加结束时间        $('.endTime').text(count(totalTime));    }    //5、时间转换格式        function count(time) {             //分钟             min = parseInt(time / 60) < 10 ? '0' + parseInt(time / 60) : parseInt(time / 60);            //秒            sec = parseInt(time % 60) < 10 ? '0' + parseInt(time % 60) : parseInt(time % 60);             //把转换的时间return出去             return min + ':' + sec        }    //6、实时更新当前播放时间    function updateTime(){          // 判断当前播放时长是否等于总时长          //如果当前时长等于总时长 清空计时器     if (playTime == totalTime) {         clearInterval(musicTimer);         return;     } else {          //获取歌曲正在播放的时间         playTime = parseInt(music.currentTime);          //如果当前时长小于等于总时长添加进去         $('.startTime').text(count(playTime));            musicProgress();          //  showlyc(staTime);     }    }    //7、设置音乐进度条    function musicProgress(){ //----------------        $('.music-control-playing').css('width',playTime / totalTime * 460)        console.log(playTime / totalTime * 460)    }    //、播放音乐    function player(){        playMusic();        $('.playWay').attr('class','playWay stop');    }    //、暂停音乐    function stoped(){         music.pause();          clearInterval(musicTimer);         $('.playWay').attr('class','playWay play')    }</script><p>5555555555555555</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ssssss&lt;br&gt;ssssssssssssssssssssssssssssss&lt;/p&gt;
&lt;p&gt;&lt;audio src=&quot;http://music.163.com/song/media/outer/url?id=2918954.mp3&quot; id=&quot;audio&quot;&gt;&lt;/audio&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>模板</title>
    <link href="https://dianxiaoerk.github.io/%E6%A8%A1%E6%9D%BF/"/>
    <id>https://dianxiaoerk.github.io/模板/</id>
    <published>2019-06-02T06:25:22.000Z</published>
    <updated>2019-06-04T01:02:42.237Z</updated>
    
    <content type="html"><![CDATA[<img src="/模板/git常用命令.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/模板/git常用命令.jpg&quot;&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
